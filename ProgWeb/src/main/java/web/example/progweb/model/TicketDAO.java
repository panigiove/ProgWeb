package web.example.progweb.model;

import web.example.progweb.model.abstractClass.AbstractDAO;
import web.example.progweb.model.entity.Ticket;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/*
CREATE TABLE PRENOTAZIONE_BIGLIETTI (
    id_prenotazione INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_evento INT,
    id_utente INT,
    id_sconto INT,
    tipologia VARCHAR(10) CHECK (tipologia IN ('poltrona', 'in piedi')) NOT NULL,
    data_acquisto TIMESTAMP NOT NULL,
    FOREIGN KEY (id_evento) REFERENCES EVENTI(id_evento),
    FOREIGN KEY (id_utente) REFERENCES UTENTI(id_utente),
    FOREIGN KEY (id_sconto) REFERENCES SCONTI_EVENTO(id_sconto)
);
 */

public class TicketDAO extends AbstractDAO {
    public TicketDAO() throws SQLException, ClassNotFoundException {
        super();
    }

    public void createTicket(String id_evento, String id_utente, String id_sconto, String tipologia) throws SQLException {
        String query = "INSERT INTO PRENOTAZIONE_BIGLIETTI (id_evento, id_utente, id_sconto, tipologia, data_acquisto) VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP)";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        preparedStatement.setInt(1, Integer.parseInt(id_evento));
        preparedStatement.setInt(2, Integer.parseInt(id_utente));
        preparedStatement.setInt(3, Integer.parseInt(id_sconto));
        preparedStatement.setString(4, tipologia);
        preparedStatement.executeUpdate();
    }

    public List<Ticket> getTickets() throws SQLException {
        List<Ticket> tickets = new ArrayList<>();
        String query = "SELECT * FROM PRENOTAZIONE_BIGLIETTI";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        ResultSet resultSet = preparedStatement.executeQuery();
        while (resultSet.next()) {
            Ticket ticket = new Ticket(
                    resultSet.getString("id_prenotazione"),
                    resultSet.getString("id_evento"),
                    resultSet.getString("id_utente"),
                    resultSet.getString("id_sconto"),
                    resultSet.getString("tipologia"),
                    resultSet.getString("data_acquisto")
            );
            tickets.add(ticket);
        }
        return tickets;
    }
}
